{"version":3,"sources":["components/Header.js","apis/db.js","components/history.js","actions/types.js","components/players/PlayerList.js","actions/index.js","components/teams/TeamViewForm.js","components/teams/TeamView.js","components/teams/TeamList.js","components/MainLayout.js","components/players/PlayerForm.js","components/players/PlayerCreate.js","components/players/PlayerEdit.js","components/teams/TeamForm.js","components/teams/TeamCreate.js","components/App.js","reducers/selectedTeamReducer.js","reducers/index.js","reducers/playerReducer.js","reducers/teamReducer.js","index.js"],"names":["Header","className","to","axios","create","baseURL","createBrowserHistory","CREATE_PLAYER","CREATE_TEAM","FETCH_PLAYERS","FETCH_TEAMS","FETCH_PLAYER","FETCH_TEAM","EDIT_PLAYER","EDIT_TEAM","DELETE_PLAYER","DELETE_TEAM","MOVE_PLAYER_TO_TEAM","PlayerList","this","props","fetchPlayers","team","player","innerId","players","length","reduce","a","b","Math","max","id","console","log","newPlayers","push","newSelected","setState","selectedTeam","addPlayerToSelectedTeam","_","pick","onClick","moveToTeam","deletePlayer","map","renderToolbar","name","role","renderList","renderCreate","React","Component","connect","state","Object","values","selected","dispatch","db","get","response","type","payload","data","delete","TeamViewForm","renderInput","input","label","meta","error","touched","autoComplete","renderError","onSubmit","formValues","onMovePlayer","fetchTeam","part","teamLimit","composition","split","defenders","midfielders","forwards","fields","index","remove","member","Field","component","readOnly","initialValues","handleSubmit","value","FieldArray","renderMembers","reduxForm","form","enableReinitialize","TeamView","createPlayer","editTeam","patch","TeamList","fetchTeams","deleteTeam","teams","MainLayout","PlayerForm","validate","errors","title","description","PlayerCreate","post","history","PlayerEdit","editPlayer","match","params","fetchPlayer","ownProps","TeamForm","TeamCreate","createTeam","App","path","exact","INTIAL_STATE","undefined","combineReducers","formReducer","action","mapKeys","omit","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.31d97382.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <div className=\"ui secondary pointing menu\">\n      <Link to=\"/\" className=\"item\">\n        Team Composition Tool\n      </Link>\n    </div>\n  );\n};\n\nexport default Header;\n","import axios from 'axios';\n\nexport default axios.create({\n  //local\n   baseURL: 'http://localhost:3001'\n  //deployed\n  //baseURL: 'https://my-json-server.typicode.com/Sergey-Tumilovich/teamcompositionserver'\n});\n","//technically a separate library from react-router-dom\r\nimport {createBrowserHistory} from 'history';\r\n\r\nexport default createBrowserHistory();","//CREATE types\nexport const CREATE_PLAYER='CREATE_PLAYER';\nexport const CREATE_TEAM='CREATE_TEAM';\n\n//FETCH_ALL types\nexport const FETCH_PLAYERS='FETCH_PLAYERS';\nexport const FETCH_TEAMS='FETCH_TEAMS';\n\n//FETCH_SINGLE types\nexport const FETCH_PLAYER='FETCH_PLAYER';\nexport const FETCH_TEAM='FETCH_TEAM';\n\n//EDIT types\nexport const EDIT_PLAYER='EDIT_PLAYER';\nexport const EDIT_TEAM='EDIT_TEAM';\n\n//DELETE types\nexport const DELETE_PLAYER='DELETE_PLAYER';\nexport const DELETE_TEAM='DELETE_TEAM';\n\n//MOVE types\nexport const MOVE_PLAYER_TO_TEAM = 'MOVE_PLAYER_TO_TEAM';\nexport const MOVE_PLAYER_FROM_TEAM = 'MOVE_PLAYER_FROM_TEAM';","import React from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport {Link } from 'react-router-dom'\nimport { fetchPlayers, deletePlayer } from '../../actions';\n\nclass PlayerList extends React.Component{\n  componentDidMount(){\n    this.props.fetchPlayers();\n  }\n\n  renderCreate(){\n    return(\n      <div>\n        <Link to=\"/players/new\" className='ui button primary'>New Player...</Link>\n      </div>\n    )\n  }\n\n  addPlayerToSelectedTeam(team,player){\n    let innerId = 1;\n    if(team.players.length>0){ \n      let maxPlayer = team.players.reduce((a,b)=>{\n        return Math.max(a.id,b.id)\n      });\n      innerId = maxPlayer.id+1;\n    }\n    console.log(\"next id\");\n    console.log(innerId);\n    //not a good solution for React/Redux\n    //but since JSON server is not good with nesting routes... ;)\n    const newPlayers= team.players;\n    newPlayers.push({...player,id:innerId});\n    const newSelected = {...team,players:newPlayers};\n    this.setState({selectedTeam:newSelected});\n    // team.players.push({...player,id:innerId});\n  }\n\n  moveToTeam(player){\n    //no selected team?\n    if(!this.props.selectedTeam) return;\n    //1. Put this player to a current team' players[] list\n    this.addPlayerToSelectedTeam(this.props.selectedTeam, _.pick(player,'name','role'));\n    //2. Delete this player from a list\n  }\n\n  renderToolbar(player){\n    return (\n      <div className='right floated content'>\n        <Link to={`/players/edit/${player.id}`} \n        className='ui button primary'>Edit Player</Link>\n        <button className='ui button primary' onClick={()=>this.moveToTeam(player)}>\n          Add to Current Team\n        </button>\n        <button className='ui button negative' onClick={()=>this.props.deletePlayer(player.id)}>\n          Delete\n        </button>\n      </div>\n    )\n  }\n\n  renderList(){\n    return this.props.players.map(player=>{\n      return(\n        <div className='item' key={player.id}>\n          {this.renderToolbar(player)}\n          <i className='large middle aligned icon futbol outline'/>\n          <div className='content'>\n            {player.name}\n            <div className='description'>{player.role}</div>\n          </div>\n        </div>\n      )\n    })\n  }\n\n  render(){\n    return(\n      <div>\n        <div>\n          <h2>Player Pool</h2>\n        </div>\n        <div className='ui celled list'>\n          {this.renderList()}\n        </div>\n        {this.renderCreate()}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) =>{\n  return { \n    players: Object.values(state.players),\n    selectedTeam: state.selected.selectedTeam\n   };\n};\n\nexport default connect(\n  mapStateToProps,\n   {fetchPlayers,\n    deletePlayer\n  }) (PlayerList);\n","import db from '../apis/db';\nimport history from '../components/history';\n\nimport { \n  CREATE_PLAYER,\n  FETCH_PLAYERS,\n  FETCH_PLAYER,\n  EDIT_PLAYER,\n  DELETE_PLAYER,\n  CREATE_TEAM,\n  FETCH_TEAM,\n  FETCH_TEAMS,\n  EDIT_TEAM,\n  DELETE_TEAM,\n  MOVE_PLAYER_TO_TEAM,\n  MOVE_PLAYER_FROM_TEAM\n} \nfrom './types';\n\n//-----------PLAYERS-----------//\n\nexport const createPlayer = formValues => async dispatch =>{\n  const response = await db.post('/players', formValues);\n\n  dispatch({type:CREATE_PLAYER, payload: response.data});\n  history.push('/');\n};\n\nexport const fetchPlayers = () => async dispatch =>{\n  const response = await db.get('/players');\n  dispatch({type: FETCH_PLAYERS, payload: response.data});\n}\n\nexport const fetchPlayer = (id) => async dispatch =>{\n  const response = await db.get(`/players/${id}`);\n\n  dispatch({type: FETCH_PLAYER, payload: response.data});\n}\n\nexport const editPlayer = (id,formValues) => async dispatch =>{\n  const response = await db.patch(`/players/${id}`,formValues);\n\n  dispatch({type: EDIT_PLAYER, payload: response.data});\n  history.push('/');\n}\n\nexport const deletePlayer = (id) => async dispatch =>{\n  await db.delete(`/players/${id}`);\n  dispatch({type: DELETE_PLAYER, payload: id});\n}\n\n//---------TEAMS---------//\nexport const createTeam = formValues => async dispatch =>{\n  const response = await db.post('/teams', {\n    ...formValues,\n    players:[],\n    defenders:0, midfielders:0, forwards:0});\n\n  dispatch({type:CREATE_TEAM, payload: response.data});\n  history.push('/');\n};\n\nexport const fetchTeams = () => async dispatch => {\n  const response = await db.get('/teams');\n  dispatch({ type: FETCH_TEAMS, payload: response.data });\n}\n\nexport const fetchTeam = (id) => async dispatch =>{\n  const response = await db.get(`/teams/${id}`);\n\n  dispatch({type: FETCH_TEAM, payload: response.data});\n}\n\nexport const editTeam = (id,formValues) => async dispatch =>{\n  const response = await db.patch(`/teams/${id}`,formValues);\n\n  dispatch({type: EDIT_TEAM, payload: response.data});\n}\n\nexport const deleteTeam = (id) => async dispatch =>{\n  await db.delete(`/teams/${id}`);\n  dispatch({type: DELETE_TEAM, payload: id});\n}\n\n//-------Move players-------//\n export const movePlayerToTeam = (id,player) => async dispatch =>{\n  const response = await db.post(`/teams/${id}/players`,player);\n  dispatch({type: MOVE_PLAYER_TO_TEAM, payload:response.data});\n}\n\nexport const movePlayerFromTeam = (id,playerId) => async dispatch =>{\n  await db.delete(`/teams/${id}/players/${playerId}`);\n  dispatch({type: MOVE_PLAYER_FROM_TEAM, payload: playerId});\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, FieldArray, reduxForm } from 'redux-form';\r\n\r\nclass TeamViewForm extends React.Component{\r\n  componentDidMount(){\r\n    console.log('MOUNTED')\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    console.log('UPDATED');\r\n  }\r\n\r\n    renderError({ error, touched }) {\r\n        if (touched && error) {\r\n          return (\r\n            <div className=\"ui error message\">\r\n              <div className=\"header\">{error}</div>\r\n            </div>\r\n          );\r\n        }\r\n    }\r\n\r\n    renderToolbar(id){\r\n      return (\r\n        <div className='right floated content'>\r\n          <button className='ui button primary' onClick={()=>this.props.fetchTeam(id)}>\r\n            Remove from Team\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    renderInput = ({ input, label, meta }) => {\r\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\r\n        return (\r\n          <div className={className}>\r\n            <label>{label}</label>\r\n            <input {...input} autoComplete=\"off\" />\r\n            {this.renderError(meta)}\r\n          </div>\r\n        );\r\n      };\r\n\r\n    limitOf(part){\r\n      return 0;\r\n    }\r\n\r\n    renderP(input){\r\n      return <span>{input}</span>\r\n    }\r\n\r\n    setLimitText(team){\r\n      const teamLimit = team.composition.split('-');\r\n      return(\r\n        <div>\r\n          <p>{team.defenders}/{teamLimit[0]} Defenders, \r\n          {team.midfielders}/{teamLimit[1]} Midfielders, \r\n          {team.forwards}/{teamLimit[2]} Forwards</p>\r\n        </div>\r\n      )\r\n    }\r\n    \r\n  onSubmit = (formValues) => {\r\n    this.props.onSubmit(formValues);\r\n  };\r\n\r\n  onMovePlayer = (player) =>{\r\n    this.props.onMovePlayer(player);\r\n  }\r\n\r\n  removeFromTeam(fields,index){\r\n    fields.remove(index);\r\n  }\r\n\r\n  renderMembers({fields}){\r\n    if(fields.length===0) return <div>No players yet, add them now!</div>\r\n    return (\r\n    <div className='ui celled list'>\r\n      {fields.map((member, index,fields) => (\r\n        <li key={index} className=\"item\">\r\n          <div className='ui right floated content'>\r\n          <button\r\n            className='ui button primary'\r\n            onClick={()=>{\r\n              fields.remove(index);\r\n              }}>Remove from Team</button>\r\n          </div>\r\n          <i className='large middle aligned icon futbol outline'/>\r\n          <Field\r\n            name={`${member}.name`}\r\n            component=\"input\"\r\n            readOnly={true}\r\n            label=\"\"\r\n          />\r\n          <Field\r\n            name={`${member}.role`}\r\n            type=\"text\"\r\n            component=\"input\"\r\n            readOnly={true}\r\n            label=\"\"\r\n          />\r\n        </li>\r\n      )\r\n    )}\r\n    </div>)\r\n  }\r\n\r\n  render() {\r\n    if(!this.props.initialValues) return <div>Load a team to edit it here</div>\r\n  return (\r\n    <form\r\n      onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n      className=\"ui form error\">\r\n      <Field name=\"name\" component={this.renderInput} label=\"Change Name\" />\r\n      <label>Change Composition</label>\r\n      <Field\r\n        name=\"composition\"\r\n        component=\"select\"\r\n      >\r\n        <option value=\"\"></option>\r\n        <option value=\"4-5-1\">4-5-1</option>\r\n        <option value=\"4-4-2\">4-4-2</option>\r\n        <option value=\"4-3-3\">4-3-3</option>\r\n      </Field>\r\n      <FieldArray \r\n        name=\"players\" \r\n        component={\r\n          this.renderMembers\r\n        } />\r\n      <button type=\"submit\" className=\"ui button primary\">Save Team</button>\r\n    </form>\r\n    );\r\n  }\r\n}\r\n  \r\nexport default reduxForm({\r\n  form: 'teamViewForm',\r\n  enableReinitialize: true,\r\n})(TeamViewForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { editTeam, createPlayer } from '../../actions';\r\nimport TeamViewForm from './TeamViewForm';\r\n\r\nclass TeamView extends React.Component{\r\n\r\nonMovePlayer = (player) =>{\r\n  this.props.createPlayer(player);\r\n}\r\n\r\nonSubmit = (formValues) =>{\r\n  this.props.editTeam(this.props.selectedTeam.id,formValues);\r\n}\r\n\r\nrender(){\r\n  return (\r\n    <div>\r\n      <h3>Edit Team</h3>\r\n      <TeamViewForm\r\n        initialValues={this.props.selectedTeam}\r\n        onSubmit={this.onSubmit}\r\n        onMovePlayer={this.onMovePlayer} />\r\n    </div>\r\n  )\r\n}\r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {selectedTeam: state.selected.selectedTeam}\r\n}\r\n\r\nexport default connect(mapStateToProps,{editTeam})(TeamView);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link } from 'react-router-dom'\r\nimport { fetchTeams, fetchTeam, deleteTeam } from '../../actions';\r\n\r\nclass TeamList extends React.Component{\r\n  componentDidMount(){\r\n    this.props.fetchTeams();\r\n  }\r\n\r\n\r\n  renderCreate(){\r\n    return(\r\n      <div>\r\n        <Link to=\"/teams/new\" className='ui button primary'>New Team...</Link>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderToolbar(id){//team\r\n    return (\r\n      <div className='right floated content'>\r\n        <button className='ui button primary' onClick={()=>this.props.fetchTeam(id)}>\r\n          Load\r\n        </button>\r\n        <button className='ui button negative' onClick={()=>this.props.deleteTeam(id)}>\r\n          Delete\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderList(){\r\n    return this.props.teams.map(team=>{\r\n      return(\r\n        <div className='item' key={team.id}>\r\n          {this.renderToolbar(team.id)}\r\n          <i className='large middle aligned icon users'/>\r\n          <div className='content'>\r\n            {team.name}\r\n            <div className='description'>{team.composition}</div>\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <h2>Teams</h2>\r\n        <div className='ui celled list'>\r\n          {this.renderList()}\r\n        </div>\r\n        {this.renderCreate()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n    teams: Object.values(state.teams),\r\n    selectedTeam: state.selected\r\n  };\r\n}\r\n\r\nexport default connect (mapStateToProps, { fetchTeams, fetchTeam, deleteTeam })(TeamList);","import React from 'react';\r\nimport PlayerList from './players/PlayerList';\r\nimport TeamView from './teams/TeamView';\r\nimport TeamList from './teams/TeamList';\r\n\r\nclass MainLayout extends React.Component {\r\n  render(){\r\n    return(\r\n      <div className='ui grid'>\r\n        <div className='eight wide column'>\r\n          <PlayerList/>\r\n        </div>\r\n        <div className='eight wide column'>\r\n          <TeamView/>\r\n          <TeamList/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default MainLayout;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nclass PlayerForm extends React.Component {\r\n  renderError({ error, touched }) {\r\n    if (touched && error) {\r\n      return (\r\n        <div className=\"ui error message\">\r\n          <div className=\"header\">{error}</div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderInput = ({ input, label, meta }) => {\r\n    const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\r\n    return (\r\n      <div className={className}>\r\n        <label>{label}</label>\r\n        <input {...input} autoComplete=\"off\" />\r\n        {this.renderError(meta)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onSubmit = (formValues) => {\r\n    this.props.onSubmit(formValues);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n        className=\"ui form error\"\r\n      >\r\n        <Field name=\"name\" component={this.renderInput} label=\"Enter Name\" />\r\n        <label>Enter Role</label>\r\n        <Field\r\n          name=\"role\"\r\n          component=\"select\"\r\n        >\r\n          \r\n          <option value=\"\"></option>\r\n          <option value=\"forward\">Forward</option>\r\n          <option value=\"defender\">Defender</option>\r\n          <option value=\"midfielder\">Midfielder</option>\r\n        </Field>\r\n        <button className=\"ui button primary\">Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n  const errors = {};\r\n\r\n  if (!formValues.name) {\r\n    errors.title = 'You must enter a name';\r\n  }\r\n\r\n  if (!formValues.role) {\r\n    errors.description = 'You must enter a role';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default reduxForm({\r\n  form: 'playerForm',\r\n  validate,\r\n})(PlayerForm);\r\n\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createPlayer } from '../../actions';\nimport PlayerForm from './PlayerForm';\n\nclass PlayerCreate extends React.Component {\n\n  onSubmit = (formValues) => {\n    this.props.createPlayer(formValues);\n  };\n\n  render() {\n    return (\n      <div>\n        <h3>New Player</h3>\n        <PlayerForm onSubmit={this.onSubmit}/>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { createPlayer })(PlayerCreate);\n","import _ from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux'\nimport { fetchPlayer, editPlayer } from '../../actions';\nimport PlayerForm from './PlayerForm';\n\nclass PlayerEdit extends React.Component {\n  componentDidMount(){\n    this.props.fetchPlayer(this.props.match.params.id);\n  }\n\n  onSubmit = (formValues) =>{\n    this.props.editPlayer(this.props.match.params.id,formValues);\n  }\n\n  render(){\n    return (\n      <div>\n        <h3>Edit Player</h3>\n        <PlayerForm\n          initialValues={_.pick(this.props.player, 'name', 'role')} \n          onSubmit={this.onSubmit} />\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = (state, ownProps) =>{\n  return {player: state.players[ownProps.match.params.id]}\n}\n\nexport default connect (mapStateToProps, {fetchPlayer, editPlayer})(PlayerEdit);\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nclass TeamForm extends React.Component {\r\n  renderError({ error, touched }) {\r\n    if (touched && error) {\r\n      return (\r\n        <div className=\"ui error message\">\r\n          <div className=\"header\">{error}</div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderInput = ({ input, label, meta }) => {\r\n    const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\r\n    return (\r\n      <div className={className}>\r\n        <label>{label}</label>\r\n        <input {...input} autoComplete=\"off\" />\r\n        {this.renderError(meta)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onSubmit = (formValues) => {\r\n    this.props.onSubmit(formValues);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n        className=\"ui form error\"\r\n      >\r\n        <Field name=\"name\" component={this.renderInput} label=\"Enter Team Name\" />\r\n        <label>Team Composition</label>\r\n        <Field\r\n          name=\"composition\"\r\n          component=\"select\"\r\n        >\r\n          \r\n          <option value=\"\"></option>\r\n          <option value=\"4-5-1\">4-5-1</option>\r\n          <option value=\"4-4-2\">4-4-2</option>\r\n          <option value=\"4-3-3\">4-3-3</option>\r\n        </Field>\r\n        <button className=\"ui button primary\">Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n  const errors = {};\r\n  \r\n  if (!formValues.title) {\r\n    errors.title = 'You must enter a title';\r\n  }\r\n  \r\n  if (!formValues.role) {\r\n    errors.description = 'You must enter a role';\r\n  }\r\n  \r\n  return errors;\r\n};\r\n  \r\nexport default reduxForm({\r\n    form: 'teamForm',\r\n    validate,\r\n})(TeamForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createTeam } from '../../actions';\r\nimport TeamForm from './TeamForm';\r\n\r\n\r\nclass TeamCreate extends React.Component {\r\n  onSubmit = (formValues) => {\r\n    this.props.createTeam(formValues);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>New Team</h3>\r\n        <TeamForm onSubmit={this.onSubmit}/>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default connect(null, { createTeam })(TeamCreate);","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport Header from './Header';\nimport MainLayout from './MainLayout';\n\nimport PlayerCreate from './players/PlayerCreate';\nimport PlayerEdit from './players/PlayerEdit';\nimport TeamCreate from './teams/TeamCreate';\n\nimport history from './history';\n\nconst App = () => {\n  return (\n    <div className=\"ui container\">\n      <HashRouter history={history}>\n        <div>\n          <Header />\n          <Route path=\"/#/\" exact component={MainLayout} />\n          <Route path=\"/players/new\" exact component={PlayerCreate} />\n          <Route path=\"/players/edit/:id\" exact component={PlayerEdit} />\n          <Route path=\"/teams/new\" exact component={TeamCreate} />\n        </div>\n      </HashRouter>\n    </div>\n  );\n};\n\nexport default App;\n","import { FETCH_TEAM } from \"../actions/types\";\r\n\r\nconst INTIAL_STATE ={\r\n    selectedTeam:undefined\r\n}\r\n\r\nexport default (state=INTIAL_STATE,action)=>{\r\n    switch(action.type){\r\n        case FETCH_TEAM:\r\n            return { ...state, selectedTeam:action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport playerReducer from './playerReducer';\nimport selectedTeamReducer from './selectedTeamReducer';\nimport teamReducer from './teamReducer';\n\nexport default combineReducers({\n  form: formReducer,\n  players: playerReducer,\n  teams: teamReducer,\n  selected: selectedTeamReducer\n});\n","import _ from 'lodash';\r\nimport {\r\n    CREATE_PLAYER,\r\n    FETCH_PLAYERS,\r\n    FETCH_PLAYER,\r\n    EDIT_PLAYER,\r\n    DELETE_PLAYER,\r\n    MOVE_PLAYER_TO_TEAM\r\n} from '../actions/types';\r\n\r\n//object approach for a state\r\n\r\nexport default (state={}, action) =>{\r\n    switch(action.type){\r\n        case FETCH_PLAYERS://merge the records into the one object\r\n            return { ...state, ..._.mapKeys(action.payload,'id')};\r\n        case FETCH_PLAYER://create a new state object with new k-v pair\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case CREATE_PLAYER://same for all single entity operations\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case EDIT_PLAYER:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case DELETE_PLAYER://create a new state object without specific key\r\n            return _.omit(state, action.payload);\r\n        case MOVE_PLAYER_TO_TEAM:\r\n            return {...state, [action.payload.id]: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","import _ from 'lodash';\r\nimport {\r\n    CREATE_TEAM,\r\n    FETCH_TEAMS,\r\n    FETCH_TEAM,\r\n    EDIT_TEAM,\r\n    DELETE_TEAM\r\n} from '../actions/types';\r\n\r\n//object approach for a state\r\n\r\nexport default (state={}, action) =>{\r\n    switch(action.type){\r\n        case FETCH_TEAMS://merge the records into the one object\r\n            return { ...state, ..._.mapKeys(action.payload,'id')};\r\n        case FETCH_TEAM://create a new state object with new k-v pair\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case CREATE_TEAM://same for all single entity operations\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case EDIT_TEAM:\r\n            return { ...state, [action.payload.id]: action.payload };\r\n        case DELETE_TEAM://create a new state object without specific key\r\n            return _.omit(state, action.payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}